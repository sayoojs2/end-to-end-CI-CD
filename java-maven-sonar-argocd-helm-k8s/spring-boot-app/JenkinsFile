pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://192.168.56.102:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonar', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "sayoojs2/jenkins:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('dockerhub')
      }
      steps {
        script {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "dockerhub") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "end-to-end-CI-CD"
            GIT_USER_NAME = "sayoojs2"
        }
     steps {
    withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
        script {
            // Configure Git user information
            sh 'git config user.email "sayooj.s2@gmail.com"'
            sh 'git config user.name "sayoojs2"'

            // Update deployment image tag in deployment.yml
            def buildNumber = env.BUILD_NUMBER
            sh "sed -i 's/replaceImageTag/${buildNumber}/g' java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml"

            // Add the updated deployment.yml to Git index
            sh 'git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml'

            // Check if there are changes to be committed
            def gitDiff = sh(returnStatus: true, script: 'git diff --cached')
            if (gitDiff == 0) {
                // Commit the changes
                sh "git commit -m 'Update deployment image to version ${buildNumber}'"

                // Push the changes to GitHub
                sh "git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main"
            } else {
                echo "No changes to commit."
            }
        }
    }
}

}
